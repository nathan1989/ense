// Inspired from https://gist.github.com/timknight/03e6335b8816aa534cf7
// Example:
// aside.primary {
//   @include breakpoint(md) {
//     float: right;
//     width: 350px;
//   }
//   @include breakpoint(480px) {
//     display: none;
//   }
//   @include breakpoint($min: 640px, $max: 767px) {
//     text-align: center;
//     font-style: italic;
//   }
// }

@mixin breakpoint($min: 0, $max: 0) {
  $type: type-of($min);
  
  @if $type == string {
    @if $min == xs { 
      @media (max-width: map-get($breakpoints, xs)) { @content; } // Tiny mobile devices
    }
    
    @else if $min == sm {
      @media (min-width: map-get($breakpoints, sm)) { @content; } // Mobile devices
    }
    
    @else if $min == md {
      @media (min-width: map-get($breakpoints, md)) { @content; } // Tablet devices
    }
    
    @else if $min == lg {
      @media (min-width: map-get($breakpoints, lg)) { @content; } // Small desktops
    }
    
    @else if $min == xlg {
      @media (min-width: map-get($breakpoints, xlg)) { @content; } // Desktops
    }
    
    @else if $min == xxlg {
      @media (min-width: map-get($breakpoints, xxlg)) { @content; } // Large desktops
    }
  
    // Otherwise pass a warning to the compiler as to the appropriate options
    @else {
      @warn "The breakpoint mixin supports the following attributes: xs, sm, md, lg, xlg, xxlg";
    }
  }
  @else if $type == number {
    // Allow for custom parameters for min and max size
    $query: "all" !default;
    @if      $min != 0 and $max != 0 { $query: "(min-width: #{$min}) and (max-width: #{$max})"; } // set both min and max
    @else if $min != 0 and $max == 0 { $query: "(min-width: #{$min})"; } // set just min
    @else if $min == 0 and $max != 0 { $query: "(max-width: #{$max})"; } // set just max
    @media #{$query} { @content; }
  }
}